#!/usr/bin/env python3
import json

# The JSON response from IONOS
json_response = '''{"id":"chatcmpl-0c5bef1fbdc84cb6a40539d3d9734e2b","choices":[{"finish_reason":"stop","index":0,"message":{"content":"{\n  \"files\": [\n    {\n      \"filename\": \"index.html\",\n      \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Calculator</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"style.css\\\">\\n</head>\\n<body>\\n    <div class=\\\"calculator\\\">\\n        <input type=\\\"text\\\" id=\\\"display\\\" disabled>\\n        <div class=\\\"buttons\\\">\\n            <button class=\\\"button operator\\\" id=\\\"clear\\\">C</button>\\n            <button class=\\\"button operator\\\" id=\\\"backspace\\\">DEL</button>\\n            <button class=\\\"button operator\\\" id=\\\"memory-clear\\\">MC</button>\\n            <button class=\\\"button operator\\\" id=\\\"memory-recall\\\">MR</button>\\n            <button class=\\\"button operator\\\" id=\\\"memory-plus\\\">M+</button>\\n            <button class=\\\"button operator\\\" id=\\\"memory-minus\\\">M-</button>\\n            <button class=\\\"button operator\\\" id=\\\"memory-recall-value\\\">MS</button>\\n            <button class=\\\"button operator\\\" id=\\\"memory-recall-clear\\\">MC</button>\\n            <button class=\\\"button operator\\\" id=\\\"change-sign\\\">¬±</button>\\n            <button class=\\\"button operator\\\" id=\\\"sqrt\\\">‚àö</button>\\n            <button class=\\\"button operator\\\" id=\\\"log\\\">log</button>\\n            <button class=\\\"button operator\\\" id=\\\"sin\\\">sin</button>\\n            <button class=\\\"button operator\\\" id=\\\"cos\\\">cos</button>\\n            <button class=\\\"button operator\\\" id=\\\"tan\\\">tan</button>\\n            <button class=\\\"button operator\\\" id=\\\"pi\\\">œÄ</button>\\n            <button class=\\\"button number\\\" id=\\\"7\\\">7</button>\\n            <button class=\\\"button number\\\" id=\\\"8\\\">8</button>\\n            <button class=\\\"button number\\\" id=\\\"9\\\">9</button>\\n            <button class=\\\"button operator\\\" id=\\\"divide\\\">/</button>\\n            <button class=\\\"button number\\\" id=\\\"4\\\">4</button>\\n            <button class=\\\"button number\\\" id=\\\"5\\\">5</button>\\n            <button class=\\\"button number\\\" id=\\\"6\\\">6</button>\\n            <button class=\\\"button operator\\\" id=\\\"multiply\\\">*</button>\\n            <button class=\\\"button number\\\" id=\\\"1\\\">1</button>\\n            <button class=\\\"button number\\\" id=\\\"2\\\">2</button>\\n            <button class=\\\"button number\\\" id=\\\"3\\\">3</button>\\n            <button class=\\\"button operator\\\" id=\\\"subtract\\\">-</button>\\n            <button class=\\\"button number\\\" id=\\\"0\\\">0</button>\\n            <button class=\\\"button operator\\\" id=\\\"add\\\">+</button>\\n            <button class=\\\"button operator\\\" id=\\\"equals\\\">=</button>\\n        </div>\\n    </div>\\n    <script src=\\\"script.js\\\"></script>\\n</body>\\n</html>\"\n    },\n    {\n      \"filename\": \"style.css\",\n      \"content\": \"/* Calculator styles */\\nbody {\\n    background-color: #1a1a1a;\\n    font-family: Arial, sans-serif;\\n    height: 100vh;\\n    margin: 0;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n.calculator {\\n    background-color: #333;\\n    padding: 20px;\\n    border-radius: 10px;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\\n}\\n#display {\\n    width: 100%;\\n    height: 40px;\\n    padding: 10px;\\n    font-size: 24px;\\n    text-align: right;\\n    background-color: #444;\\n    border: none;\\n    border-radius: 10px 10px 0 0;\\n}\\n.buttons {\\n    display: grid;\\n    grid-template-columns: repeat(4, 1fr);\\n    grid-gap: 10px;\\n}\\n.button {\\n    background-color: #555;\\n    color: #fff;\\n    padding: 10px;\\n    border: none;\\n    border-radius: 10px;\\n    cursor: pointer;\\n}\\n.button:hover {\\n    background-color: #666;\\n}\\n.button.operator {\\n    background-color: #999;\\n}\\n.button.operator:hover {\\n    background-color: #aaa;\\n}\\n.button.number {\\n    background-color: #666;\\n}\\n.button.number:hover {\\n    background-color: #777;\\n}\\n#clear, #backspace, #memory-clear, #memory-recall, #memory-plus, #memory-minus, #memory-recall-value, #memory-recall-clear, #change-sign, #sqrt, #log, #sin, #cos, #tan, #pi {\\n    grid-column: span 2;\\n}\\n#equals {\\n    grid-column: span 4;\\n}\\n\"\n    },\n    {\n      \"filename\": \"script.js\",\n      \"content\": \"// Calculator logic\\nconst display = document.getElementById('display');\\nconst buttons = document.querySelectorAll('.button');\\nlet memory = 0;\\nlet memoryValue = 0;\\nlet lastOperation = '';\\n\\nbuttons.forEach(button => {\\n    button.addEventListener('click', () => {\\n        const value = button.textContent;\\n        if (value === 'C') {\\n            display.value = '';\\n            memory = 0;\\n            memoryValue = 0;\\n            lastOperation = '';\\n        } else if (value === 'DEL') {\\n            display.value = display.value.slice(0, -1);\\n        } else if (['MC', 'MR', 'M+', 'M-'].includes(value)) {\\n            if (value === 'MC') {\\n                memory = 0;\\n                memoryValue = 0;\\n            } else if (value === 'MR') {\\n                display.value = memoryValue;\\n            } else if (value === 'M+') {\\n                memoryValue += parseFloat(display.value);\\n                memory = 0;\\n            } else if (value === 'M-') {\\n                memoryValue -= parseFloat(display.value);\\n                memory = 0;\\n            }\\n        } else if (['sin', 'cos', 'tan', 'log', 'sqrt'].includes(value)) {\\n            if (value === 'sin') {\\n                display.value = Math.sin(parseFloat(display.value));\\n            } else if (value === 'cos') {\\n                display.value = Math.cos(parseFloat(display.value));\\n            } else if (value === 'tan') {\\n                display.value = Math.tan(parseFloat(display.value));\\n            } else if (value === 'log') {\\n                display.value = Math.log10(parseFloat(display.value));\\n            } else if (value === 'sqrt') {\\n                display.value = Math.sqrt(parseFloat(display.value));\\n            }\\n        } else if (value === 'œÄ') {\\n            display.value = Math.PI;\\n        } else if (value === '=') {\\n            if (lastOperation === '+') {\\n                display.value = parseFloat(display.value) + parseFloat(memoryValue);\\n            } else if (lastOperation === '-') {\\n                display.value = parseFloat(memoryValue) - parseFloat(display.value);\\n            } else if (lastOperation === '*') {\\n                display.value = parseFloat(display.value) * parseFloat(memoryValue);\\n            } else if (lastOperation === '/') {\\n                display.value = parseFloat(memoryValue) / parseFloat(display.value);\\n            }\\n            memoryValue = 0;\\n            lastOperation = '';\\n        } else {\\n            display.value += value;\\n            if (value === '.') {\\n                if (!display.value.includes('.')) {\\n                    display.value += value;\\n                }\\n            } else if (value === '+' || value === '-' || value === '*' || value === '/') {\\n                lastOperation = value;\\n            }\\n        }\\n    });\\n});\\n\"\n    }\n  ]\n}","role":"assistant","tool_calls":null,"function_call":null}}],"created":1758343536,"model":"meta-llama/Meta-Llama-3.1-8B-Instruct","object":"chat.completion","system_fingerprint":null,"usage":{"completion_tokens":1800,"prompt_tokens":178,"total_tokens":1978,"prompt_tokens_details":null},"service_tier":null,"prompt_logprobs":null}'''

# Parse the response and extract files
response = json.loads(json_response)
content = response["choices"][0]["message"]["content"]
files_data = json.loads(content)

import os
import shutil

# Clean and create project directory
if os.path.exists("generated_project"):
    shutil.rmtree("generated_project")
os.makedirs("generated_project", exist_ok=True)

# Write files
for file_info in files_data["files"]:
    filename = file_info["filename"]
    content = file_info["content"]

    file_path = os.path.join("generated_project", filename)
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)

    print(f"üìÅ Created: {filename}")

print(f"\n‚úÖ Calculator app generated!")
print(f"üåê Open: open generated_project/index.html")